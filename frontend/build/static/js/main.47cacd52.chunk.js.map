{"version":3,"sources":["Context/ChatProvider.js","endpoint.js","components/Authentication/Login.js","components/Authentication/Signup.js","Pages/Homepage.js","components/SingleChat.js","config/ChatLogics.js","components/miscellaneous/ProfileModal.js","components/ScrollableChat.js","components/userAvatar/UserBadgeItem.js","components/userAvatar/UserListItem.js","components/miscellaneous/UpdateGroupChatModal.js","components/Chatbox.js","components/ChatLoading.js","components/miscellaneous/GroupChatModal.js","components/MyChats.js","components/miscellaneous/SideDrawer.js","Pages/Chatpage.js","App.js","reportWebVitals.js","index.js"],"names":["ChatContext","createContext","ChatState","useContext","ChatProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","selectedChat","setSelectedChat","_useState3","_useState4","user","setUser","_useState5","_useState6","notification","setNotification","_useState7","_useState8","chats","setChats","history","useHistory","useEffect","userInfo","JSON","parse","localStorage","getItem","push","_jsx","Provider","value","ENDPOINT","Login","show","setShow","toast","useToast","email","setEmail","password","setPassword","loading","setLoading","submitHandler","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","_yield$axios$post","data","wrap","_context","prev","next","title","status","duration","isClosable","position","abrupt","headers","axios","post","concat","sent","setItem","stringify","t0","description","response","message","stop","apply","arguments","_jsxs","VStack","spacing","FormControl","id","isRequired","FormLabel","Input","type","placeholder","onChange","e","target","InputGroup","size","InputRightElement","width","Button","h","onClick","colorScheme","style","marginTop","isLoading","variant","Signup","handleClick","name","setName","confirmpassword","setConfirmpassword","_useState9","_useState10","_useState11","_useState12","pic","setPic","_useState13","_useState14","picLoading","setPicLoading","console","log","p","accept","pics","undefined","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","postDetails","files","Homepage","socket","selectedChatCompare","Container","maxW","centerContent","Box","d","justifyContent","bg","w","m","borderRadius","borderWidth","Text","fontSize","fontFamily","Tabs","isFitted","TabList","mb","Tab","TabPanels","TabPanel","isSameSenderMargin","messages","i","userId","length","sender","_id","isSameSender","isLastMessage","isSameUser","getSender","loggedUser","users","_users$","ProfileModal","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","_Fragment","IconButton","base","icon","ViewIcon","Modal","isCentered","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","flexDir","alignItems","Image","boxSize","src","alt","md","ModalFooter","ScrollableChat","ScrollableFeed","map","display","Tooltip","label","placement","hasArrow","Avatar","mt","mr","cursor","backgroundColor","marginLeft","padding","maxWidth","content","UserBadgeItem","handleFunction","admin","Badge","px","py","CloseIcon","pl","UserListItem","_hover","background","color","UpdateGroupChatModal","fetchMessages","fetchAgain","setFetchAgain","groupChatName","setGroupChatName","search","setSearch","searchResult","setSearchResult","renameloading","setRenameLoading","_ChatState","handleSearch","_ref2","query","_yield$axios$get","Authorization","token","get","_x","handleRename","_ref3","_callee2","_yield$axios$put","_context2","put","chatId","chatName","handleAddUser","_ref4","_callee3","user1","_yield$axios$put2","_context3","find","u","groupAdmin","_x2","handleRemove","_ref5","_callee4","_yield$axios$put3","_context4","_x3","flexWrap","pb","ml","Spinner","SingleChat","setMessages","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","emit","sendMessage","event","key","_toConsumableArray","io","on","newMessageRecieved","chat","includes","ArrowBackIcon","isGroupChat","toUpperCase","overflowY","alignSelf","margin","className","onKeyDown","Lottie","options","marginBottom","lastTypingTime","Date","getTime","setTimeout","Chatbox","ChatLoading","Stack","Skeleton","height","GroupChatModal","selectedUsers","setSelectedUsers","result","handleSubmit","delUser","filter","sel","slice","userToAdd","MyChats","setLoggedUser","fetchChats","lg","rightIcon","AddIcon","latestMessage","substring","SideDrawer","loadingChat","setLoadingChat","accessChat","c","Menu","MenuButton","NotificationBadge","count","effect","Effect","SCALE","BellIcon","MenuList","notif","MenuItem","n","as","ChevronDownIcon","MenuDivider","removeItem","Drawer","DrawerOverlay","DrawerContent","DrawerHeader","borderBottomWidth","DrawerBody","Chatpage","App","Route","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","ChakraProvider","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.47cacd52.chunk.js","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ChatContext = createContext();\n\nconst ChatProvider = ({ children }) => {\n  const [selectedChat, setSelectedChat] = useState();\n  const [user, setUser] = useState();\n  const [notification, setNotification] = useState([]);\n  const [chats, setChats] = useState();\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    setUser(userInfo);\n\n    if (!userInfo) history.push(\"/\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [history]);\n\n  return (\n    <ChatContext.Provider\n      value={{\n        selectedChat,\n        setSelectedChat,\n        user,\n        setUser,\n        notification,\n        setNotification,\n        chats,\n        setChats,\n      }}\n    >\n      {children}\n    </ChatContext.Provider>\n  );\n};\n\nexport const ChatState = () => {\n  return useContext(ChatContext);\n};\n\nexport default ChatProvider;\n","const ENDPOINT = \"\"\r\n\r\nexport default ENDPOINT;\r\n","import { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nimport ENDPOINT from \"../../endpoint\";\n\nconst Login = () => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const history = useHistory();\n  const { setUser } = ChatState();\n\n  const submitHandler = async () => {\n    setLoading(true);\n    if (!email || !password) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n\n      const { data } = await axios.post(\n        `${ENDPOINT}/api/user/login`,\n        { email, password },\n        config\n      );\n\n      toast({\n        title: \"Login Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setUser(data);\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setLoading(false);\n      history.push(\"/chats\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n  };\n\n  return (\n    <VStack spacing=\"10px\">\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email Address</FormLabel>\n        <Input\n          value={email}\n          type=\"email\"\n          placeholder=\"Enter Your Email Address\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter password\"\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <Button\n        colorScheme=\"blue\"\n        width=\"100%\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={loading}\n      >\n        Login\n      </Button>\n      <Button\n        variant=\"solid\"\n        colorScheme=\"red\"\n        width=\"100%\"\n        onClick={() => {\n          setEmail(\"guest@example.com\");\n          setPassword(\"123456\");\n        }}\n      >\n        Get Guest User Credentials\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Login;\n","import { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\nimport ENDPOINT from \"../../endpoint\";\n\nconst Signup = () => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  const history = useHistory();\n\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [confirmpassword, setConfirmpassword] = useState();\n  const [password, setPassword] = useState();\n  const [pic, setPic] = useState();\n  const [picLoading, setPicLoading] = useState(false);\n\n  const submitHandler = async () => {\n    setPicLoading(true);\n    if (!name || !email || !password || !confirmpassword) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n    if (password !== confirmpassword) {\n      toast({\n        title: \"Passwords Do Not Match\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    console.log(name, email, password, pic);\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n      const { data } = await axios.post(\n        `${ENDPOINT}/api/user`,\n        {\n          name,\n          email,\n          password,\n          pic,\n        },\n        config\n      );\n      console.log(data);\n      toast({\n        title: \"Registration Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setPicLoading(false);\n      history.push(\"/chats\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n    }\n  };\n\n  const postDetails = (pics) => {\n    setPicLoading(true);\n    if (pics === undefined) {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    console.log(pics);\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"chat-app\");\n      data.append(\"cloud_name\", \"piyushproj\");\n      fetch(\"https://api.cloudinary.com/v1_1/piyushproj/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n          console.log(data.url.toString());\n          setPicLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n          setPicLoading(false);\n        });\n    } else {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n  };\n\n  return (\n    <VStack spacing=\"5px\">\n      <FormControl id=\"first-name\" isRequired>\n        <FormLabel>Name</FormLabel>\n        <Input\n          placeholder=\"Enter Your Name\"\n          onChange={(e) => setName(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email Address</FormLabel>\n        <Input\n          type=\"email\"\n          placeholder=\"Enter Your Email Address\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter Password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Confirm Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Confirm password\"\n            onChange={(e) => setConfirmpassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"pic\">\n        <FormLabel>Upload your Picture</FormLabel>\n        <Input\n          type=\"file\"\n          p={1.5}\n          accept=\"image/*\"\n          onChange={(e) => postDetails(e.target.files[0])}\n        />\n      </FormControl>\n      <Button\n        colorScheme=\"blue\"\n        width=\"100%\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={picLoading}\n      >\n        Sign Up\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Signup;\n","import {\n  Box,\n  Container,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Text,\n} from \"@chakra-ui/react\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Login from \"../components/Authentication/Login\";\nimport Signup from \"../components/Authentication/Signup\";\n\nfunction Homepage() {\n  const history = useHistory();\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n\n    if (user) history.push(\"/chats\");\n  }, [history]);\n\n  return (\n    <Container maxW=\"xl\" centerContent>\n      <Box\n        d=\"flex\"\n        justifyContent=\"center\"\n        p={3}\n        bg=\"white\"\n        w=\"100%\"\n        m=\"40px 0 15px 0\"\n        borderRadius=\"lg\"\n        borderWidth=\"1px\"\n      >\n        <Text fontSize=\"4xl\" fontFamily=\"Work sans\">\n          Med-messenger\n        </Text>\n      </Box>\n      <Box bg=\"white\" w=\"100%\" p={4} borderRadius=\"lg\" borderWidth=\"1px\">\n        <Tabs isFitted variant=\"soft-rounded\">\n          <TabList mb=\"1em\">\n            <Tab>Login</Tab>\n            <Tab>Sign Up</Tab>\n          </TabList>\n          <TabPanels>\n            <TabPanel>\n              <Login />\n            </TabPanel>\n            <TabPanel>\n              <Signup />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n    </Container>\n  );\n}\n\nexport default Homepage;\n","import { FormControl } from \"@chakra-ui/form-control\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\nimport ScrollableChat from \"./ScrollableChat\";\nimport Lottie from \"react-lottie\";\nimport animationData from \"../animations/typing.json\";\n\nimport io from \"socket.io-client\";\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nimport ENDPOINT from \"../endpoint\";\n\nvar socket, selectedChatCompare;\n\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [istyping, setIsTyping] = useState(false);\n  const toast = useToast();\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n  const { selectedChat, setSelectedChat, user, notification, setNotification } =\n    ChatState();\n\n  const fetchMessages = async () => {\n    if (!selectedChat) return;\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      setLoading(true);\n\n      const { data } = await axios.get(\n        `${ENDPOINT}/api/message/${selectedChat._id}`,\n        config\n      );\n      setMessages(data);\n      setLoading(false);\n\n      socket.emit(\"join chat\", selectedChat._id);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Messages\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  const sendMessage = async (event) => {\n    if (event.key === \"Enter\" && newMessage) {\n      socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        setNewMessage(\"\");\n        const { data } = await axios.post(\n          `${ENDPOINT}/api/message`,\n          {\n            content: newMessage,\n            chatId: selectedChat,\n          },\n          config\n        );\n        socket.emit(\"new message\", data);\n        setMessages([...messages, data]);\n      } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"setup\", user);\n    socket.on(\"connected\", () => setSocketConnected(true));\n    socket.on(\"typing\", () => setIsTyping(true));\n    socket.on(\"stop typing\", () => setIsTyping(false));\n\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    fetchMessages();\n\n    selectedChatCompare = selectedChat;\n    // eslint-disable-next-line\n  }, [selectedChat]);\n\n  useEffect(() => {\n    socket.on(\"message recieved\", (newMessageRecieved) => {\n      if (\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\n        selectedChatCompare._id !== newMessageRecieved.chat._id\n      ) {\n        if (!notification.includes(newMessageRecieved)) {\n          setNotification([newMessageRecieved, ...notification]);\n          setFetchAgain(!fetchAgain);\n        }\n      } else {\n        setMessages([...messages, newMessageRecieved]);\n      }\n    });\n  });\n\n  const typingHandler = (e) => {\n    setNewMessage(e.target.value);\n\n    if (!socketConnected) return;\n\n    if (!typing) {\n      setTyping(true);\n      socket.emit(\"typing\", selectedChat._id);\n    }\n    let lastTypingTime = new Date().getTime();\n    var timerLength = 3000;\n    setTimeout(() => {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timerLength && typing) {\n        socket.emit(\"stop typing\", selectedChat._id);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n\n  return (\n    <>\n      {selectedChat ? (\n        <>\n          <Text\n            fontSize={{ base: \"28px\", md: \"30px\" }}\n            pb={3}\n            px={2}\n            w=\"100%\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent={{ base: \"space-between\" }}\n            alignItems=\"center\"\n          >\n            <IconButton\n              d={{ base: \"flex\", md: \"none\" }}\n              icon={<ArrowBackIcon />}\n              onClick={() => setSelectedChat(\"\")}\n            />\n            {messages &&\n              (!selectedChat.isGroupChat ? (\n                <>\n                  {getSender(user, selectedChat.users)}\n                  <ProfileModal\n                    user={getSenderFull(user, selectedChat.users)}\n                  />\n                </>\n              ) : (\n                <>\n                  {selectedChat.chatName.toUpperCase()}\n                  <UpdateGroupChatModal\n                    fetchMessages={fetchMessages}\n                    fetchAgain={fetchAgain}\n                    setFetchAgain={setFetchAgain}\n                  />\n                </>\n              ))}\n          </Text>\n          <Box\n            d=\"flex\"\n            flexDir=\"column\"\n            justifyContent=\"flex-end\"\n            p={3}\n            bg=\"#E8E8E8\"\n            w=\"100%\"\n            h=\"100%\"\n            borderRadius=\"lg\"\n            overflowY=\"hidden\"\n          >\n            {loading ? (\n              <Spinner\n                size=\"xl\"\n                w={20}\n                h={20}\n                alignSelf=\"center\"\n                margin=\"auto\"\n              />\n            ) : (\n              <div className=\"messages\">\n                <ScrollableChat messages={messages} />\n              </div>\n            )}\n\n            <FormControl\n              onKeyDown={sendMessage}\n              id=\"first-name\"\n              isRequired\n              mt={3}\n            >\n              {istyping ? (\n                <div>\n                  <Lottie\n                    options={defaultOptions}\n                    // height={50}\n                    width={70}\n                    style={{ marginBottom: 15, marginLeft: 0 }}\n                  />\n                </div>\n              ) : (\n                <></>\n              )}\n              <Input\n                variant=\"filled\"\n                bg=\"#E0E0E0\"\n                placeholder=\"Enter a message..\"\n                value={newMessage}\n                onChange={typingHandler}\n              />\n            </FormControl>\n          </Box>\n        </>\n      ) : (\n        // to get socket.io on same page\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\n            Click on a user to start chatting\n          </Text>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default SingleChat;\n","export const isSameSenderMargin = (messages, m, i, userId) => {\n  // console.log(i === messages.length - 1);\n\n  if (\n    i < messages.length - 1 &&\n    messages[i + 1].sender._id === m.sender._id &&\n    messages[i].sender._id !== userId\n  )\n    return 33;\n  else if (\n    (i < messages.length - 1 &&\n      messages[i + 1].sender._id !== m.sender._id &&\n      messages[i].sender._id !== userId) ||\n    (i === messages.length - 1 && messages[i].sender._id !== userId)\n  )\n    return 0;\n  else return \"auto\";\n};\n\nexport const isSameSender = (messages, m, i, userId) => {\n  return (\n    i < messages.length - 1 &&\n    (messages[i + 1].sender._id !== m.sender._id ||\n      messages[i + 1].sender._id === undefined) &&\n    messages[i].sender._id !== userId\n  );\n};\n\nexport const isLastMessage = (messages, i, userId) => {\n  return (\n    i === messages.length - 1 &&\n    messages[messages.length - 1].sender._id !== userId &&\n    messages[messages.length - 1].sender._id\n  );\n};\n\nexport const isSameUser = (messages, m, i) => {\n  return i > 0 && messages[i - 1].sender._id === m.sender._id;\n};\n\nexport const getSender = (loggedUser, users) => {\n  return users[0]?._id === loggedUser?._id ? users[1].name : users[0].name;\n};\n\nexport const getSenderFull = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1] : users[0];\n};\n","import { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  IconButton,\n  Text,\n  Image,\n} from \"@chakra-ui/react\";\n\nconst ProfileModal = ({ user, children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      {children ? (\n        <span onClick={onOpen}>{children}</span>\n      ) : (\n        <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n      )}\n      <Modal size=\"lg\" onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent h=\"410px\">\n          <ModalHeader\n            fontSize=\"40px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {user.name}\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody\n            d=\"flex\"\n            flexDir=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n          >\n            <Image\n              borderRadius=\"full\"\n              boxSize=\"150px\"\n              src={user.pic}\n              alt={user.name}\n            />\n            <Text\n              fontSize={{ base: \"28px\", md: \"30px\" }}\n              fontFamily=\"Work sans\"\n            >\n              Email: {user.email}\n            </Text>\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={onClose}>Close</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default ProfileModal;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport ScrollableFeed from \"react-scrollable-feed\";\nimport {\n  isLastMessage,\n  isSameSender,\n  isSameSenderMargin,\n  isSameUser,\n} from \"../config/ChatLogics\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst ScrollableChat = ({ messages }) => {\n  const { user } = ChatState();\n\n  return (\n    <ScrollableFeed>\n      {messages &&\n        messages.map((m, i) => (\n          <div style={{ display: \"flex\" }} key={m._id}>\n            {(isSameSender(messages, m, i, user._id) ||\n              isLastMessage(messages, i, user._id)) && (\n              <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\n                <Avatar\n                  mt=\"7px\"\n                  mr={1}\n                  size=\"sm\"\n                  cursor=\"pointer\"\n                  name={m.sender.name}\n                  src={m.sender.pic}\n                />\n              </Tooltip>\n            )}\n            <span\n              style={{\n                backgroundColor: `${\n                  m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\n                }`,\n                marginLeft: isSameSenderMargin(messages, m, i, user._id),\n                marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\n                borderRadius: \"20px\",\n                padding: \"5px 15px\",\n                maxWidth: \"75%\",\n              }}\n            >\n              {m.content}\n            </span>\n          </div>\n        ))}\n    </ScrollableFeed>\n  );\n};\n\nexport default ScrollableChat;\n","import { CloseIcon } from \"@chakra-ui/icons\";\nimport { Badge } from \"@chakra-ui/layout\";\n\nconst UserBadgeItem = ({ user, handleFunction, admin }) => {\n  return (\n    <Badge\n      px={2}\n      py={1}\n      borderRadius=\"lg\"\n      m={1}\n      mb={2}\n      variant=\"solid\"\n      fontSize={12}\n      colorScheme=\"purple\"\n      cursor=\"pointer\"\n      onClick={handleFunction}\n    >\n      {user.name}\n      {admin === user._id && <span> (Admin)</span>}\n      <CloseIcon pl={1} />\n    </Badge>\n  );\n};\n\nexport default UserBadgeItem;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nconst UserListItem = ({ handleFunction, user }) => {\n  // const { user } = ChatState();\n\n  return (\n    <Box\n      onClick={handleFunction}\n      cursor=\"pointer\"\n      bg=\"#E8E8E8\"\n      _hover={{\n        background: \"#38B2AC\",\n        color: \"white\",\n      }}\n      w=\"100%\"\n      d=\"flex\"\n      alignItems=\"center\"\n      color=\"black\"\n      px={3}\n      py={2}\n      mb={2}\n      borderRadius=\"lg\"\n    >\n      <Avatar\n        mr={2}\n        size=\"sm\"\n        cursor=\"pointer\"\n        name={user.name}\n        src={user.pic}\n      />\n      <Box>\n        <Text>{user.name}</Text>\n        <Text fontSize=\"xs\">\n          <b>Email : </b>\n          {user.email}\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n\nexport default UserListItem;\n","import { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n  IconButton,\n  Spinner,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\n\nimport ENDPOINT from \"../../endpoint\";\n\nconst UpdateGroupChatModal = ({ fetchMessages, fetchAgain, setFetchAgain }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [renameloading, setRenameLoading] = useState(false);\n  const toast = useToast();\n\n  const { selectedChat, setSelectedChat, user } = ChatState();\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`${ENDPOINT}/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n      setLoading(false);\n    }\n  };\n\n  const handleRename = async () => {\n    if (!groupChatName) return;\n\n    try {\n      setRenameLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `${ENDPOINT}/api/chat/rename`,\n        {\n          chatId: selectedChat._id,\n          chatName: groupChatName,\n        },\n        config\n      );\n\n      console.log(data._id);\n      // setSelectedChat(\"\");\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setRenameLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setRenameLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleAddUser = async (user1) => {\n    if (selectedChat.users.find((u) => u._id === user1._id)) {\n      toast({\n        title: \"User Already in group!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    if (selectedChat.groupAdmin._id !== user._id) {\n      toast({\n        title: \"Only admins can add someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `${ENDPOINT}/api/chat/groupadd`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleRemove = async (user1) => {\n    if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\n      toast({\n        title: \"Only admins can remove someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `${ENDPOINT}/api/chat/groupremove`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      fetchMessages();\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  return (\n    <>\n      <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {selectedChat.chatName}\n          </ModalHeader>\n\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\" pb={3}>\n              {selectedChat.users.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  admin={selectedChat.groupAdmin}\n                  handleFunction={() => handleRemove(u)}\n                />\n              ))}\n            </Box>\n            <FormControl d=\"flex\">\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                value={groupChatName}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n              <Button\n                variant=\"solid\"\n                colorScheme=\"teal\"\n                ml={1}\n                isLoading={renameloading}\n                onClick={handleRename}\n              >\n                Update\n              </Button>\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add User to group\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n\n            {loading ? (\n              <Spinner size=\"lg\" />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => handleAddUser(user)}\n                />\n              ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\n              Leave Group\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default UpdateGroupChatModal;\n","import { Box } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport SingleChat from \"./SingleChat\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatbox = ({ fetchAgain, setFetchAgain }) => {\n  const { selectedChat } = ChatState();\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\n      alignItems=\"center\"\n      flexDir=\"column\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"68%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n    </Box>\n  );\n};\n\nexport default Chatbox;\n","import { Stack } from \"@chakra-ui/layout\";\nimport { Skeleton } from \"@chakra-ui/skeleton\";\n\nconst ChatLoading = () => {\n  return (\n    <Stack>\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n    </Stack>\n  );\n};\n\nexport default ChatLoading;\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\nimport ENDPOINT from \"../../endpoint\";\n\nconst GroupChatModal = ({ children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n\n  const { user, chats, setChats } = ChatState();\n\n  const handleGroup = (userToAdd) => {\n    if (selectedUsers.includes(userToAdd)) {\n      toast({\n        title: \"User already added\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    setSelectedUsers([...selectedUsers, userToAdd]);\n  };\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const result = await axios.get(`${ENDPOINT}/api/user?search=${search}`, config);\n      const data = result.data;\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const handleDelete = (delUser) => {\n    setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\n  };\n\n  const handleSubmit = async () => {\n    if (!groupChatName || !selectedUsers) {\n      toast({\n        title: \"Please fill all the feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const result = await axios.post(\n        `${ENDPOINT}/api/chat/group`,\n        {\n          name: groupChatName,\n          users: JSON.stringify(selectedUsers.map((u) => u._id)),\n        },\n        config\n      );\n      const data = result.data;\n      setChats([data, ...chats]);\n      onClose();\n      toast({\n        title: \"New Group Chat Created!\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Failed to Create the Chat!\",\n        description: error.response.data,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <span onClick={onOpen}>{children}</span>\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            Create Group Chat\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <FormControl>\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add Users eg: John, Piyush, Jane\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\">\n              {selectedUsers.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  handleFunction={() => handleDelete(u)}\n                />\n              ))}\n            </Box>\n            {loading ? (\n              // <ChatLoading />\n              <div>Loading...</div>\n            ) : (\n              searchResult\n                ?.slice(0, 4)\n                .map((user) => (\n                  <UserListItem\n                    key={user._id}\n                    user={user}\n                    handleFunction={() => handleGroup(user)}\n                  />\n                ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={handleSubmit} colorScheme=\"blue\">\n              Create Chat\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default GroupChatModal;\n","import { AddIcon } from \"@chakra-ui/icons\";\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { getSender } from \"../config/ChatLogics\";\nimport ChatLoading from \"./ChatLoading\";\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\nimport { Button } from \"@chakra-ui/react\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nimport ENDPOINT from \"../endpoint.js\"\n\nconst MyChats = ({ fetchAgain }) => {\n  const [loggedUser, setLoggedUser] = useState();\n\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\n\n  const toast = useToast();\n\n  const fetchChats = async () => {\n    console.log(user);\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(`${ENDPOINT}/api/chat`, config);\n      setChats(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats();\n    // eslint-disable-next-line\n  }, [fetchAgain]);\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\n      flexDir=\"column\"\n      alignItems=\"center\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"31%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <Box\n        pb={3}\n        px={3}\n        fontSize={{ base: \"28px\", md: \"30px\" }}\n        fontFamily=\"Work sans\"\n        d=\"flex\"\n        w=\"100%\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        My Chats\n        <GroupChatModal>\n          <Button\n            d=\"flex\"\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\n            rightIcon={<AddIcon />}\n          >\n            New Group Chat\n          </Button>\n        </GroupChatModal>\n      </Box>\n      <Box\n        d=\"flex\"\n        flexDir=\"column\"\n        p={3}\n        bg=\"#F8F8F8\"\n        w=\"100%\"\n        h=\"100%\"\n        borderRadius=\"lg\"\n        overflowY=\"hidden\"\n      >\n        {chats ? (\n          <Stack overflowY=\"scroll\">\n            {chats.map((chat) => (\n              <Box\n                onClick={() => setSelectedChat(chat)}\n                cursor=\"pointer\"\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\n                color={selectedChat === chat ? \"white\" : \"black\"}\n                px={3}\n                py={2}\n                borderRadius=\"lg\"\n                key={chat._id}\n              >\n                <Text>\n                  {!chat.isGroupChat\n                    ? getSender(loggedUser, chat.users)\n                    : chat.chatName}\n                </Text>\n                {chat.latestMessage && (\n                  <Text fontSize=\"xs\">\n                    <b>{chat.latestMessage.sender.name} : </b>\n                    {chat.latestMessage.content.length > 50\n                      ? chat.latestMessage.content.substring(0, 51) + \"...\"\n                      : chat.latestMessage.content}\n                  </Text>\n                )}\n              </Box>\n            ))}\n          </Stack>\n        ) : (\n          <ChatLoading />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default MyChats;\n","import { Button } from \"@chakra-ui/button\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport {\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n} from \"@chakra-ui/menu\";\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerHeader,\n  DrawerOverlay,\n} from \"@chakra-ui/modal\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport ChatLoading from \"../ChatLoading\";\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport ProfileModal from \"./ProfileModal\";\nimport NotificationBadge from \"react-notification-badge\";\nimport { Effect } from \"react-notification-badge\";\nimport { getSender } from \"../../config/ChatLogics\";\nimport UserListItem from \"../userAvatar/UserListItem\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nimport ENDPOINT from \"../../endpoint.js\"\n\nfunction SideDrawer() {\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingChat, setLoadingChat] = useState(false);\n\n  const {\n    setSelectedChat,\n    user,\n    notification,\n    setNotification,\n    chats,\n    setChats,\n  } = ChatState();\n\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const history = useHistory();\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"userInfo\");\n    history.push(\"/\");\n  };\n\n  const handleSearch = async () => {\n    if (!search) {\n      toast({\n        title: \"Please Enter something in search\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-left\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const result = await axios.get(`${ENDPOINT}/api/user?search=${search}`, config);\n      const data = result.data;\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const accessChat = async (userId) => {\n    console.log(userId);\n\n    try {\n      setLoadingChat(true);\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const result = await axios.post(`${ENDPOINT}/api/chat`, { userId }, config);\n      const data = result.data;\n      if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\n      setSelectedChat(data);\n      setLoadingChat(false);\n      onClose();\n    } catch (error) {\n      toast({\n        title: \"Error fetching the chat\",\n        description: error.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <Box\n        d=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        bg=\"white\"\n        w=\"100%\"\n        p=\"5px 10px 5px 10px\"\n        borderWidth=\"5px\"\n      >\n        <Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\n          <Button variant=\"ghost\" onClick={onOpen}>\n            <i className=\"fas fa-search\"></i>\n            <Text d={{ base: \"none\", md: \"flex\" }} px={4}>\n              Search User\n            </Text>\n          </Button>\n        </Tooltip>\n        <Text fontSize=\"2xl\" fontFamily=\"Work sans\">\n          Med-messenger\n        </Text>\n        <div>\n          <Menu>\n            <MenuButton p={1}>\n              <NotificationBadge\n                count={notification.length}\n                effect={Effect.SCALE}\n              />\n              <BellIcon fontSize=\"2xl\" m={1} />\n            </MenuButton>\n            <MenuList pl={2}>\n              {!notification.length && \"No New Messages\"}\n              {notification.map((notif) => (\n                <MenuItem\n                  key={notif._id}\n                  onClick={() => {\n                    setSelectedChat(notif.chat);\n                    setNotification(notification.filter((n) => n !== notif));\n                  }}\n                >\n                  {notif.chat.isGroupChat\n                    ? `New Message in ${notif.chat.chatName}`\n                    : `New Message from ${getSender(user, notif.chat.users)}`}\n                </MenuItem>\n              ))}\n            </MenuList>\n          </Menu>\n          <Menu>\n            <MenuButton as={Button} bg=\"white\" rightIcon={<ChevronDownIcon />}>\n              <Avatar\n                size=\"sm\"\n                cursor=\"pointer\"\n                name={user.name}\n                src={user.pic}\n              />\n            </MenuButton>\n            <MenuList>\n              <ProfileModal user={user}>\n                <MenuItem>My Profile</MenuItem>{\" \"}\n              </ProfileModal>\n              <MenuDivider />\n              <MenuItem onClick={logoutHandler}>Logout</MenuItem>\n            </MenuList>\n          </Menu>\n        </div>\n      </Box>\n\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerHeader borderBottomWidth=\"1px\">Search Users</DrawerHeader>\n          <DrawerBody>\n            <Box d=\"flex\" pb={2}>\n              <Input\n                placeholder=\"Search by name or email\"\n                mr={2}\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n              />\n              <Button onClick={handleSearch}>Go</Button>\n            </Box>\n            {loading ? (\n              <ChatLoading />\n            ) : (\n              searchResult.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => accessChat(user._id)}\n                />\n              ))\n            )}\n            {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\n\nexport default SideDrawer;\n","import { Box } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport Chatbox from \"../components/Chatbox\";\nimport MyChats from \"../components/MyChats\";\nimport SideDrawer from \"../components/miscellaneous/SideDrawer\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatpage = () => {\n  const [fetchAgain, setFetchAgain] = useState(false);\n  const { user } = ChatState();\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      {user && <SideDrawer />}\n      <Box d=\"flex\" justifyContent=\"space-between\" w=\"100%\" h=\"91.5vh\" p=\"10px\">\n        {user && <MyChats fetchAgain={fetchAgain} />}\n        {user && (\n          <Chatbox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n        )}\n      </Box>\n    </div>\n  );\n};\n\nexport default Chatpage;\n","import \"./App.css\";\nimport Homepage from \"./Pages/Homepage\";\nimport { Route } from \"react-router-dom\";\nimport Chatpage from \"./Pages/Chatpage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route path=\"/\" component={Homepage} exact />\n      <Route path=\"/chats\" component={Chatpage} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport ChatProvider from \"./Context/ChatProvider\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <ChakraProvider>\n    <BrowserRouter>\n      <ChatProvider>\n        <App />\n      </ChatProvider>\n    </BrowserRouter>\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}